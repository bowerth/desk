#######################################
## Shiny interface for data functions
#######################################
## data ui and tabs

## ui.ind <- list(
##     "C01T99 TOT" = 38,
##     "C15T37 MANUF" = 39,
##     "C30T33 ICT" = 41,
##     "C50T99 SERV" = 42,
##     "C50T74 MKSERV" = 43,
##     "C10T74 NAGMK" = 44,
##     "......" = 100,
##     "C01T05 AGR" = 1,
##     "C10T14 MIN" = 2,
##     "C15T16 FOD" = 3,
##     "C17T19 TEX" = 4,
##     "C20 WOD" = 5,
##     "C21T22 PAP" = 6,
##     "C23 PET" = 7,
##     "C24 CHM" = 8,
##     "C25 RBP" = 9,
##     "C26 NMM" = 10,
##     "C27 MET" = 11,
##     "C28 FBM" = 12,
##     "C29 MEQ" = 13,
##     "C30 ITQ" = 14,
##     "C31 ELQ" = 15,
##     "C32 CMQ" = 16,
##     "C33 SCQ" = 17,
##     "C34 MTR" = 18,
##     "C35 TRQ" = 19,
##     "C36T37 OTM" = 20,
##     "C40T41 EGW" = 21,
##     "C45 CON" = 22,
##     "C50T52 WRT" = 23,
##     "C55 HTR" = 24,
##     "C60T63 TRN" = 25,
##     "C64 PTL" = 26,
##     "C65T67 FIN" = 27,
##     "C70 REA" = 28,
##     "C71 RMQ" = 29,
##     "C72 ITS" = 30,
##     "C73 RDS" = 31,
##     "C74 BZS" = 32,
##     "C75 GOV" = 33,
##     "C80 EDU" = 34,
##     "C85 HTH" = 35,
##     "C90T93 OTS" = 36,
##     "C95 PVH" = 37,
##     "......" = 200,
##     "C29T30 OTH" = 40
##     )

## ui.cou <- list(
##     "WOR: Total World" = 65,
##     "Total OECD" = 64,
##     "ASEAN" = 63,
##     "East Asia" = 62,
##     "NAFTA" = 61,
##     "EU27" = 60,
##     "EU15" = 59,
##     "..." = 100,
##     "AUS: Australia" = 1,
##     "AUT: Austria" = 2,
##     "BEL: Belgium" = 3,
##     "CAN: Canada" = 4,
##     "CHL: Chile" = 5,
##     "CZE: Czech Republic" = 6,
##     "DNK: Denmark" = 7,
##     "EST: Estonia" = 8,
##     "FIN: Finland" = 9,
##     "FRA: France" = 10,
##     "DEU: Germany" = 11,
##     "GRC: Greece" = 12,
##     "HUN: Hungary" = 13,
##     "ISL: Iceland" = 14,
##     "IRL: Ireland" = 15,
##     "ISR: Israel" = 16,
##     "ITA: Italy" = 17,
##     "JPN: Japan" = 18,
##     "KOR: Korea" = 19,
##     "LUX: Luxembourg" = 20,
##     "MEX: Mexico" = 21,
##     "NLD: Netherlands" = 22,
##     "NZL: New Zealand" = 23,
##     "NOR: Norway" = 24,
##     "POL: Poland" = 25,
##     "PRT: Portugal" = 26,
##     "SVK: Slovak Republic" = 27,
##     "SVN: Slovenia" = 28,
##     "ESP: Spain" = 29,
##     "SWE: Sweden" = 30,
##     "CHE: Switzerland" = 31,
##     "TUR: Turkey" = 32,
##     "GBR: United Kingdom" = 33,
##     "USA: United States" = 34,
##     "ARG: Argentina" = 35,
##     "BRA: Brazil" = 36,
##     "CHN: China" = 37,
##     "TWN: Chinese Taipei" = 38,
##     "IND: India" = 39,
##     "IDN: Indonesia" = 40,
##     "RUS: Russian Federation" = 41,
##     "SGP: Singapore" = 42,
##     "ZAF: South Africa" = 43,
##     "HKG: Hong Kong, China" = 44,
##     "MYS: Malaysia" = 45,
##     "PHL: Philippines" = 46,
##     "THA: Thailand" = 47,
##     "ROU: Romania" = 48,
##     "VNM: Viet Nam" = 49,
##     "SAU: Saudi Arabia" = 50,
##     "BRN: Brunei" = 51,
##     "BGR: Bulgaria" = 52,
##     "CYP: Cyprus" = 53,
##     "LVA: Latvia" = 54,
##     "LTU: Lithuania" = 55,
##     "MLT: Malta" = 56,
##     "KHM: Cambodia" = 57,
##     "ROW: Rest of the World" = 58
##     ## "CHN2" = 59,
##     ## "CHN3" = 60,
##     ## "CHN4" = 61
##     )

## ## if (exists("reload")==FALSE) reload <- TRUE
## ## if (reload==TRUE)
## ## {

## ## require(shiny)
## ## require(reshape2)
## ## require(icioData)
## ## require(stan)
## ## require(rMaps)
## ## require(rCharts)
## ## require(RColorBrewer)

## EXCEL.COL <- rbind.data.frame(
##     c("OECDSUT102013", "#4F81BD"),
##     c("STANandBTD", "#C0504D"),
##     c("WIOT042012", "#9BBB59"),
##     c("INDSTAT32", "#8064A2"),
##     c("UNSDSNA2013", "#F79646"),
##     c("", "#95B3D7"),
##     c("", "#DA9694"),
##     c("", "#C4D79B"),
##     c("", "#FABF8F"),
##     c("", "#B1A0C7"),
##     c("", "#92CDDC"),
##     c("OECDSUT082013", "#4F81BD"),
##     c("ICIO052013", "black"))
## names(EXCEL.COL) <- c("sou", "col")
## EXCEL.COL[,2] <- as.character(EXCEL.COL[,2])

## nameyear <- c(1995, 2000, 2005, 2008, 2009)

## coef.label <- rbind.data.frame(
##     c("eB", "employment"),
##     c("vB", "Value added")
##     )
## names(coef.label) <- c("coef", "label")

## demand.label <- rbind.data.frame(
##     c("FD", "Final demand"),
##     c("GFCF", "Capital formation"),
##     c("GRTR", "Gross trade"),
##     c("HHCP", "Household consumption")
##     )
## names(demand.label) <- c("demand", "label")

## agg.ind.icio <- rbind.data.frame(
##     c("C01T05 AGR", "C01T05 AGR"),
##     c("C10T14 MIN", "C10T14 MIN"),
##     c("C15T16 FOD", "C15T16 FOD"),
##     c("C17T19 TEX", "C17T19 TEX"),
##     c("C20T22 WPP", "C20 WOD"),
##     c("C20T22 WPP", "C21T22 PAP"),
##     c("C23T26 CNM", "C23 PET"),
##     c("C23T26 CNM", "C24 CHM"),
##     c("C23T26 CNM", "C25 RBP"),
##     c("C23T26 CNM", "C26 NMM"),
##     c("C27T28 MFM", "C27 MET"),
##     c("C27T28 MFM", "C28 FBM"),
##     c("C29 MEQ", "C29 MEQ"),
##     c("C30T33 ICT", "C30 ITQ"),
##     c("C30T33 ICT", "C31 ELQ"),
##     c("C30T33 ICT", "C32 CMQ"),
##     c("C30T33 ICT", "C33 SCQ"),
##     c("C34T35 MTQ", "C34 MTR"),
##     c("C34T35 MTQ", "C35 TRQ"),
##     c("C36T37 OTM", "C36T37 OTM"),
##     c("C40T41 EGW", "C40T41 EGW"),
##     c("C45 CON", "C45 CON"),
##     c("C50T55 THR", "C50T52 WRT"),
##     c("C50T55 THR", "C55 HTR"),
##     c("C50T55 THR", "C60T63 TRN"),
##     c("C60T64 TRT", "C64 PTL"),
##     c("C65T67 FIN", "C65T67 FIN"),
##     c("C70T74 BZS", "C70 REA"),
##     c("C70T74 BZS", "C71 RMQ"),
##     c("C70T74 BZS", "C72 ITS"),
##     c("C70T74 BZS", "C73 RDS"),
##     c("C70T74 BZS", "C74 BZS"),
##     c("C75T95 OTS", "C75 GOV"),
##     c("C75T95 OTS", "C80 EDU"),
##     c("C75T95 OTS", "C85 HTH"),
##     c("C75T95 OTS", "C90T93 OTS"),
##     c("C75T95 OTS", "C95 PVH")
##     )
## names(agg.ind.icio) <- c("ind.icio18", "ind.icio37")

## namesec <- as.character(agg.ind.icio[,"ind.icio37"])

## secagg <- rbind.data.frame(
##     c(38, "C01T99 TOT", 1, 37),
##     c(39, "C15T37 MANUF", 3, 20),
##     c(40, "C29T30 OTH", 13, 14),
##     c(41, "C30T33 ICT", 14, 17),
##     c(42, "C50T99 SERV", 23, 37),
##     c(43, "C50T74 MKSERV", 23, 32),
##     c(44, "C10T74 NAGMK", 2, 32)
##     )
## names(secagg) <- c("id", "agg", "start", "end")
## secagg$id <- as.numeric(as.character(secagg$id))
## secagg$start <- as.numeric(as.character(secagg$start))
## secagg$end <- as.numeric(as.character(secagg$end))
## namesec.agg <- union(namesec, secagg$agg)

## namesec.label <- rbind.data.frame(
##     c("C01T99 TOT","C01T99","Total","total",0,0,1),
##     c("C01T05 AGR","C01T05","Agriculture","agriculture",1,1,0),
##     c("C10T74 NAGMK","C10T74","Non-agriculture _ business sector","non-agriculture business sector",0,0,1),
##     c("C10T14 MIN","C10T14","Mining","mining",1,1,0),
##     c("C15T37 MANUF","C15T37","Manufacturing","manufacturing",0,0,1),
##     c("C15T16 FOD","C15T16","Food _ products","food products ",1,1,0),
##     c("C17T19 TEX","C17T19","Textile &_ apparel","textile and apparel",1,1,0),
##     c("C20T22 WPP","C20T22","Wood &_ paper","wood and paper",0,1,0),
##     c("C20 WOD","C20","Wood","wood",1,0,0),
##     c("C21T22 PAP","C21T22","Pulp &_ paper","pulp and paper",1,0,0),
##     c("C23T26 CNM","C23T26","Chemicals &_ minerals","chemicals and minerals",0,1,0),
##     c("C23 PET","C23","Coke &_ petroleum","coke and petroleum",1,0,0),
##     c("C24 CHM","C24","Chemical _ products","chemical products",1,0,0),
##     c("C25 RBP","C25","Rubber &_ plastics","rubber and plastics",1,0,0),
##     c("C26 NMM","C26","Non-metallic _ mineral","non-metallic mineral",1,0,0),
##     c("C27T28 MFM","C27T28","Basic &_ fabricated metals","basic and febricated metal",0,1,0),
##     c("C27 MET","C27","Basic _ metal","basic metal",1,0,0),
##     c("C28 FBM","C28","Fabricated _ metal","fabricated metal",1,0,0),
##     c("C29T30 OTH","C29T30","Other &_ office machinery","Other and office machinery",0,0,1),
##     c("C29 MEQ","C29","Other _ machinery","other machinery",1,1,0),
##     c("C30T33 ICT","C30T33","Electrical _ equipment","electrical equipment",0,0,1),
##     c("C30 ITQ","C30","Office _ machinery","office machinery",1,0,0),
##     c("C31 ELQ","C31","Electrical _ machinery","electrical machinery",1,0,0),
##     c("C32 CMQ","C32","Communication _ equipment","communication equipment",1,0,0),
##     c("C33 SCQ","C33","Medical &_ precision","medical and precision equipment",1,0,0),
##     c("C34T35 MTQ","C34T35","Transport _ equipment","transport equipment",0,1,0),
##     c("C34 MTR","C34","Motor vehicle &_ trailers","motor vehicle and trailer",1,0,0),
##     c("C35 TRQ","C35","Other transport _ equipment","other transport equipment",1,0,0),
##     c("C36T37 OTM","C36T37","Other _ manufactures","other manufactures",1,1,0),
##     c("C40T41 EGW","C40T41","Utilities","utilities",1,1,0),
##     c("C45 CON","C45","Construction","construction",1,1,0),
##     c("C50T99 SERV","C50T99","Total _ services","total services",0,0,1),
##     c("C50T74 MKSERV","C50T74","Business sector _ services","business sector services",0,0,1),
##     c("C50T55 THR","C50T55","Trade &_ restaurants","trade and restaurants",0,1,0),
##     c("C50T52 WRT","C50T52","Wholesale &_ retail","wholesale and retail",1,0,0),
##     c("C55 HTR","C55","Hotels &_ restaurants","hotels and restaurants",1,0,0),
##     c("C60T64 TRT","C60T64","Transport &_ telecoms","transport and telecommunications",0,1,0),
##     c("C60T63 TRN","C60T63","Transport &_ storage","transport and storage",1,0,0),
##     c("C64 PTL","C64","Post &_ telecom","post and telecom",1,0,0),
##     c("C65T67 FIN","C65T67","Finance &_ insurance","finance and insurance",1,1,0),
##     c("C70T74 BZS","C70T74","Business _ services","business services",0,1,0),
##     c("C70 REA","C70","Real _estate","real estate",1,0,0),
##     c("C71 RMQ","C71","Renting","renting",1,0,0),
##     c("C72 ITS","C72","Computer _ services","computer services",1,0,0),
##     c("C73 RDS","C73","Research &_ development","research and development",1,0,0),
##     c("C74 BZS","C74","Other _ business","other business",1,0,0),
##     c("C75T95 OTS","C75T95","Other services","other services",0,1,0),
##     c("C75 GOV","C75","Public _ administration","public administration",1,0,0),
##     c("C80 EDU","C80","Education","education",1,0,0),
##     c("C85 HTH","C85","Health & social","health and social",1,0,0),
##     c("C90T93 OTS","C90T93","Community &_ personal","community and personal",1,0,0),
##     c("C95 PVH","C95","Private _ households","private households",1,0,0)
##     )
## names(namesec.label) <- c("ind", "code", "industry", "indlabel", "ind.icio37", "ind.icio18", "ind.icioagg")

## ## order and number of items matters - compare with ui
## namereg.label <- rbind.data.frame(
##     c("AUS","Australia","Australia","Australian",1,0,0,0,0,0,1),
##     c("AUT","Austria","Austria","Austrian",1,1,1,0,0,0,1),
##     c("BEL","Belgium","Belgium","Belgian",1,1,1,0,0,0,1),
##     c("CAN","Canada","Canada","Canadian",1,0,0,1,0,0,1),
##     c("CHL","Chile","Chile","Chilean",1,0,0,0,0,0,1),
##     c("CZE","Czech Republic","the Czech Republic","Czech",1,0,1,0,0,0,1),
##     c("DNK","Denmark","Denmark","Danish",1,1,1,0,0,0,1),
##     c("EST","Estonia","Estonia","Estonian",1,0,1,0,0,0,1),
##     c("FIN","Finland","Finland","Finnish",1,1,1,0,0,0,1),
##     c("FRA","France","France","French",1,1,1,0,0,0,1),
##     c("DEU","Germany","Germany","German",1,1,1,0,0,0,1),
##     c("GRC","Greece","Greece","Greek",1,1,1,0,0,0,1),
##     c("HUN","Hungary","Hungary","Hungarian",1,0,1,0,0,0,1),
##     c("ISL","Iceland","Iceland","Icelandish",1,0,0,0,0,0,1),
##     c("IRL","Ireland","Ireland","Irish",1,1,1,0,0,0,1),
##     c("ISR","Israel","Israel","Israeli",1,0,0,0,0,0,1),
##     c("ITA","Italy","Italy","Italian",1,1,1,0,0,0,1),
##     c("JPN","Japan","Japan","Japanese",1,0,0,0,1,0,1),
##     c("KOR","Korea","Korea","Korean",1,0,0,0,1,0,1),
##     c("LUX","Luxembourg","Luxembourg","Luxembourgish",1,1,1,0,0,0,1),
##     c("MEX","Mexico","Mexico","Mexican",1,0,0,1,0,0,1),
##     c("NLD","Netherlands","the Netherlands","Dutch",1,1,1,0,0,0,1),
##     c("NZL","New Zealand","New Zealand","New Zealand's",1,0,0,0,0,0,1),
##     c("NOR","Norway","Norway","Norwegian",1,0,0,0,0,0,1),
##     c("POL","Poland","Poland","Polish",1,0,1,0,0,0,1),
##     c("PRT","Portugal","Portugal","Portuguese",1,1,1,0,0,0,1),
##     c("SVK","Slovak Republic","the Slovak Republic","Slovak",1,0,1,0,0,0,1),
##     c("SVN","Slovenia","Slovenia","Slovenian",1,0,1,0,0,0,1),
##     c("ESP","Spain","Spain","Spainish",1,1,1,0,0,0,1),
##     c("SWE","Sweden","Sweden","Swedish",1,1,1,0,0,0,1),
##     c("CHE","Switzerland","Switzerland","Swiss",1,0,0,0,0,0,1),
##     c("TUR","Turkey","Turkey","Turkish",1,0,0,0,0,0,1),
##     c("GBR","United Kingdom","the United Kingdom","UK",1,1,1,0,0,0,1),
##     c("USA","United States","the United States","US",1,0,0,1,0,0,1),
##     c("ARG","Argentina","Argentina","Argentinian",1,0,0,0,0,0,0),
##     c("BRA","Brazil","Brazil","Brazilian",1,0,0,0,0,0,0),
##     c("CHN","China","China","Chinese",1,0,0,0,1,0,0),
##     c("TWN","Chinese Taipei","Chinese Taipei","Chinese Taipei",1,0,0,0,1,0,0),
##     c("IND","India","India","Indian",1,0,0,0,0,0,0),
##     c("IDN","Indonesia","Indonesia","Indonesian",1,0,0,0,0,1,0),
##     c("RUS","Russian Fed.","the Russian Federation","Russian",1,0,0,0,0,0,0),
##     c("SGP","Singapore","Singapore","Singaporean",1,0,0,0,0,1,0),
##     c("ZAF","South Africa","South Africa","South African",1,0,0,0,0,0,0),
##     c("HKG","Hong Kong","Hong Kong (SAR China)","Hong Kong",1,0,0,0,1,0,0),
##     c("MYS","Malaysia","Malaysia","Malaysian",1,0,0,0,0,1,0),
##     c("PHL","Philippines","Philippines","Filipino",1,0,0,0,0,1,0),
##     c("THA","Thailand","Thailand","Thai",1,0,0,0,0,1,0),
##     c("ROU","Romania","Romania","Romanian",1,0,1,0,0,0,0),
##     c("VNM","Viet Nam","Viet Nam","Vietnamese",1,0,0,0,0,1,0),
##     c("SAU","Saudi Arabia","Saudi Arabia","Saudi Arabian",1,0,0,0,0,0,0),
##     c("BRN","Brunei Darussalam","Brunei Darussalam","Bruneian",1,0,0,0,0,1,0),
##     c("BGR","Bulgaria","Bulgaria","Bulgarian",1,0,1,0,0,0,0),
##     c("CYP","Cyprus","Cyprus","Cypriot",1,0,1,0,0,0,0),
##     c("LVA","Latvia","Latvia","Latvian",1,0,1,0,0,0,0),
##     c("LTU","Lithuania","Lithuania","Lithuanian",1,0,1,0,0,0,0),
##     c("MLT","Malta","Malta","Maltese",1,0,1,0,0,0,0),
##     c("KHM","Cambodia","Cambodia","Cambodian",1,0,0,0,0,1,0),
##     c("ROW","Rest_of the_World","the Rest of the World","Rest of the World's",1,0,0,0,0,0,0),
##     c("EU15","EU 15","EU 15","EU 15",0,0,0,0,0,0,0),
##     c("EU27","EU 27","EU 27","EU 27",0,0,0,0,0,0,0),
##     c("NAFTA","NAFTA","NAFTA","NAFTA",0,0,0,0,0,0,0),
##     c("E_ASIA","East Asia","East Asia","East Asia",0,0,0,0,0,0,0),
##     c("ASEAN","ASEAN","ASEAN","ASEAN",0,0,0,0,0,0,0),
##     c("OECD","Total OECD","Total OECD","Total OECD",0,0,0,0,0,0,0),
##     c("WOR","Total World","Total World","Total World",0,0,0,0,0,0,0)
##     )
## names(namereg.label) <- c("cou","country", "coulabel", "coupron", "reg.WOR", "reg.EU15", "reg.EU27", "reg.NAFTA", "reg.E_ASIA", "reg.ASEAN", "reg.OECD")

## region <- sub("reg.", "", names(namereg.label)[substr(names(namereg.label), 1, 4)=="reg."])

## ## create character vectors "EU15", "EU27" etc. with member country codes
## namereg <- namereg.label$cou[namereg.label$reg.WOR==1]
## for (reg in region) # c("WOR", "EU27", "NAFTA", "E_ASIA", "ASEAN", "OECD")
## {
##     eval(parse(text = paste0(reg, ' <- namereg.label$cou[namereg.label$reg.', reg, '==1]')))
## }

## namereg.list <- NULL
## for (j in seq(along=namereg))
## {
##     namereg.list <- c(namereg.list, list(j))
##     names(namereg.list)[j] <- as.character(namereg[j])
## }
## ##

## namereg.agg <- list(EU15 = match(EU15, namereg),
##                     EU27 = match(EU27, namereg),
##                     NAFTA = match(NAFTA, namereg),
##                     E_ASIA = match(E_ASIA, namereg),
##                     ASEAN = match(ASEAN, namereg),
##                     OECD = match(OECD, namereg),
##                     WOR = match(WOR, namereg))

## namereg.agg <- c(namereg.list, namereg.agg)
## ##
## rownames <- merge(namesec, namereg)
## rownames<- paste(rownames[,2], rownames[,1])
## colnames <- namereg
## dimnames=list(rownames, colnames)

## ##
## ## data loading
## ## ICIO5837EB
## ## data(ICIO5837APP)



## ##
## nocou <- isolate(dim(values[["ICIO5837APP"]]$DATA.ICIO5837GRTR)[2])
## noind <- isolate(dim(values[["ICIO5837APP"]]$DATA.ICIO5837GRTR)[1]) / nocou
## ## nocou <- dim(DATA.ICIO5837GRTR)[2]
## ## noind <- dim(DATA.ICIO5837GRTR)[1] / nocou
## ##
## dim_conv <- list(row=c(nocou, noind), col=c(nocou))
## ## }


output$icioindic_ui_and_tabs <- renderUI({


      ## doLogin()
      ## if (loginData$LoggedIn) {
      ##     doLogout()

    list(
        includeCSS("www/style.css"),
        ## includeMathJax("www/js/MathJax.js"),
        tags$head(
            tags$script(src = "js/jquery-ui.custom.min.js"),
            tags$script(src = "js/busy.js"),
            ## tags$script(src = "js/MathJax.js?config=TeX-AMS-MML_HTMLorMML")
            tags$script(src = 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML',
                        type = 'text/javascript')
            ),

        sidebarLayout(
            sidebarPanel(
                div(class = "busy",
                    p("Calculation in progress ..."),
                    img(src="ajaxloaderq.gif")
                    ),

                ## wellPanel(
                uiOutput("uiDatasets"), # manage.R
                ## ),
                ## include "Manage" to prepare modules like "analysis_skeleton.R"
                conditionalPanel(condition = "input.datatabs == 'Manage'",
                                 uiOutput("ui_Manage") # manage.R
                                 )

                ## ,
                ## conditionalPanel(condition = "input.datatabs != 'Manage'",
                ##                  ## dim: 2
                ##                  selectInput("coef", "Coefficients:",
                ##                              list(
                ##                                  "eB: Employment" = "eB",
                ##                                  "vB: Value-added" = "vB"
                ##                                  )
                ##                              ),
                ##                  ## dim: 5 -> 16
                ##                  selectInput("time", "Year:",
                ##                              list(
                ##                                  "2009" = 5,
                ##                                  "2008" = 4,
                ##                                  "2005" = 3,
                ##                                  "2000" = 2,
                ##                                  "1995" = 1
                ##                                  )
                ##                              ),
                ##                  conditionalPanel(condition="input.datatabs==3 | input.datatabs==4 | input.datatabs==5 | input.datatabs==6" ,
                ##                                   ## dim: 4
                ##                                   selectInput("demand", "Demand concept: (demand)",
                ##                                               list(
                ##                                                   "GRTR: Gross Trade" = "GRTR",
                ##                                                   "FD: Final Demand" = "FD",
                ##                                                   "GFCF: Gross Fixed Capital Formation" = "GFCF",
                ##                                                   "HHCP: Household Consumption" = "HHCP"
                ##                                                   ),
                ##                                               selected = "FD"
                ##                                               )
                ##                                   ),
                ##                  conditionalPanel(condition="input.datatabs==3 | input.datatabs==4 | input.datatabs==5 | input.datatabs==6" ,
                ##                                   ## dim: 55
                ##                                   selectInput("indX", "Demand or Final Expenditure Industry: (indX)", ui.ind,
                ##                                               selected = 39) # 39: C15T37 MANUF; 41: "C30T33 ICT"
                ##                                   ),
                ##                  conditionalPanel(condition="input.datatabs==3 | input.datatabs==4",
                ##                                   ## dim: 75
                ##                                   selectInput("couS", "Source Country: (couS)", ui.cou,
                ##                                               selected = 64) # "Total OECD"
                ##                                   ),
                ##                  conditionalPanel(condition="input.datatabs==5 | input.datatabs==6",
                ##                                   ## dim: 55
                ##                                   selectInput("indS", "Source Industry: (indS)", ui.ind,
                ##                                               selected = 38) # "C01T99 TOT"
                ##                                   ),
                ##                  conditionalPanel(condition="input.datatabs==3 | input.datatabs==4 | input.datatabs==5 | input.datatabs==6" ,
                ##                                   ## dim: 75
                ##                                   selectInput("couX", "Export Country: (couX)", ui.cou,
                ##                                               selected = 62) # 62: East Asia; 65: WOR: Total World"
                ##                                   ),
                ##                  conditionalPanel(condition="input.datatabs==3 | input.datatabs==4 | input.datatabs==5 | input.datatabs==6" ,
                ##                                   ## dim: 75
                ##                                   selectInput("couD", "Demand Country: (couD)", ui.cou,
                ##                                               selected = 60) # EU27
                ##                                   ),
                ##                  checkboxInput("calcshare", "Calculate share in total", FALSE),
                ##                  conditionalPanel(condition="input.datatabs==3 | input.datatabs==4" ,
                ##                                   checkboxInput("noindX", "Remove 'Export Industry' from chart", FALSE)
                ##                                   ),
                ##                  conditionalPanel(condition="input.datatabs==4" ,
                ##                                   checkboxInput("aggindX", "Add ICIO 18 industry aggregates", FALSE)
                ##                                   ),
                ##                  conditionalPanel(condition="input.datatabs==5 | input.datatabs==6" ,
                ##                                   checkboxInput("nocouX", "Remove 'Export Country' from chart", FALSE)
                ##                                   ),
                ##                  numericInput("rounddec", "Round to number of decimals:", 4),
                ##                  conditionalPanel(condition="input.datatabs==3 | input.datatabs==5" ,
                ##                                   numericInput("topN", "Display first N values in legend:", 5)
                ##                                   ),
                ##                  selectInput("sortdata", "Order or sorting (legend, table):",
                ##                              list(
                ##                                  'ICIO industry order' = "",
                ##                                  'Decending value' = "desc",
                ##                                  'Ascending value' = "asc"
                ##                                  )),
                ##                  downloadButton('downloadData', 'Download CSV'),
                ##                  h6("Explanation Flow Diagram", a("Source-Export-Demand",
                ##                                                   href="https://www.dropbox.com/s/duzwe197fr844h9/flow_diagram.png",
                ##                                                   ## href="https://www.dropbox.com/s/mj7kv7254d2pwjt/flow_diagram.pdf",
                ##                                                   target="_blank"))
                ##                  )

                ),
            mainPanel(id = "datatabs",
                      uiOutput("tabs_icioindic")
                      )
            ) # list(...
        )

    ## } else {
    ##     sidebarLayout(
    ##         sidebarPanel = NULL,
    ##         mainPanel(
    ##             navlistPanel(
    ##                 "Disclaimer",
    ##                 tabPanel("Enter Credentials", loginUI()) # mainPanel((h5("Login"), loginUI()))
    ##                 ),
    ##             width = 15
    ##             )
    ##         )
    ## }

})

output$tabs_icioindic <- renderUI({
    tabsetPanel(id = "datatabs",

                ## tabPanel("Manage", htmlOutput("htmlDataExample"), # tools/data/manage.R l.258
                tabPanel("Manage", verbatimTextOutput("htmlDataExample") # tools/data/manage.R l.258
                         ## ,
                         ## HTML('<label>10 (max) rows shown. See View-tab for details.</label>'),
                         ## checkboxInput("man_add_descr","Add/edit data description", FALSE)
                         ## conditionalPanel(condition = "input.man_add_descr == false",
                         ##                  HTML(dataDescriptionOutput('html'))
                         ##                  ),
                         ## conditionalPanel(condition = "input.man_add_descr == true",
                         ##                  HTML("<label>Add data description:</label>"),
                         ##                  tags$textarea(id="man_data_descr", rows="10", cols="12", dataDescriptionOutput('md'))
                         ##                  )
                         )
                ## ,
                ## tabPanel("Plot: Bar: Ind",
                ##          plotOutput("plot_bar_ind", height=500),
                ##          verbatimTextOutput("blurb_ind"),
                ##          plotOutput("image_conv1", height=700),
                ##          verbatimTextOutput("label_cou"),
                ##          value=3),
                ## tabPanel("Table: Data: Ind", tableOutput("table_data_ind"), value=4),
                ## tabPanel("Plot: Bar: Cou",
                ##          plotOutput("plot_bar_cou", height=500),
                ##          verbatimTextOutput("blurb_cou"),
                ##          ## plotOutput("image_conv1", height=700),
                ##          ## verbatimTextOutput("label_cou"),
                ##          value=5),
                ## tabPanel("Table: Data: Cou", tableOutput("table_data_cou"), value=6),
                ## tabPanel("Plot: Map: Cou", showOutput("rchart_map_cou", "datamaps"), value=5)

                )
})


## #########################
## custom input for testing
## #########################

## input <- list(coef="eB",
##               indS=38,
##               couS=64,
##               couX=65,
##               indX=41,
##               couD=60,
##               nocouX=FALSE,
##               noindX=FALSE,
##               time=4,
##               demand="GRTR",
##               calcshare=FALSE,
##               rounddec=4,
##               sortdata="desc",
##               aggindX=FALSE,
##               topN=5,
##               datatabs=3)
## input


## data.title <- reactive({

##     title <- list(coef=input$coef,
##                   year=nameyear[as.numeric(input$time)],
##                   demand=input$demand,
##                   indX=namesec.agg[as.numeric(input$indX)],
##                   indS=namesec.agg[as.numeric(input$indS)],
##                   couS=names(namereg.agg)[as.numeric(input$couS)],
##                   couX=names(namereg.agg)[as.numeric(input$couX)],
##                   couD=names(namereg.agg)[as.numeric(input$couD)])
##     if (input$datatabs==1 | input$datatabs==2)
##     {
##         title <- title[!names(title)%in%c("indS", "couX", "indX")]
##     } else if (input$datatabs==3 | input$datatabs==4)
##     {
##         title <- title[!names(title)%in%c("indS")]
##     } else if (input$datatabs==5 | input$datatabs==6)
##     {
##         title <- title[!names(title)%in%c("couS")]
##     }
##     ##
##     title

## })

## data.title.string <- reactive({
##     title <- data.title()

##     title.string <- NULL
##     for (i in seq(along=title))
##     {
##         if (is.null(title.string))
##         {
##             title.string <- paste(toString(names(title[i])), toString(title[[i]]), sep = ": ")
##         }
##         else
##         {
##             title.string <- paste(title.string, paste(toString(names(title[i])), toString(title[[i]]), sep = ": "), sep = ", ")
##         }
##     }
##     title.string

## })

## data.blurb <- reactive({
##     title <- data.title()

##     ## title
##     blurb <- list(
##         coef=coef.label$label[coef.label$coef==title$coef],
##         year=title$year,
##         demand=demand.label$label[demand.label$demand==title$demand],
##         indX=paste0(namesec.label$indlabel[namesec.label$ind==title$indX],
##         " industries (", namesec.label$code[namesec.label$ind==title$indX], ")"),
##         indS=paste0(namesec.label$indlabel[namesec.label$ind==title$indS],
##         " industries (", namesec.label$code[namesec.label$ind==title$indS], ")"),
##         couS=namereg.label$coupron[namereg.label$cou==title$couS],
##         couX1=namereg.label$coupron[namereg.label$cou==title$couX],
##         couX2=namereg.label$country[namereg.label$cou==title$couX],
##         couD=namereg.label$coupron[namereg.label$cou==title$couD]
##         )
##     blurb

## })

## output$blurb_ind <- renderPrint({
##     blurb <- data.blurb()
##     blurb.ind.string <- paste0(
##         as.character(blurb$couS), " ",
##         blurb$coef, ", in source industry, generated by ",
##         blurb$couD, " ", tolower(blurb$demand), " of ",
##         blurb$couX1, " exports of ",
##         blurb$indX, ", ",
##         blurb$year, ".")
##     blurb.ind.string.template <- "<couS><coef>, in source industry, generated by <couD><demand> of <couX> exports of <indX>, <year>."
##     return(cat(paste0(blurb.ind.string, "\n",
##                       blurb.ind.string.template)))
## })

## output$blurb_cou <- renderPrint({
##     blurb <- data.blurb()
##     blurb.cou.string <- paste0(
##         blurb$coef, " in ",
##         blurb$indS, " within each country, supported by ",
##         blurb$couD, " ", tolower(blurb$demand), " of ",
##         blurb$couX1, " exports of ",
##         blurb$indX, ", ",
##         blurb$year, " (includes ", tolower(blurb$coef), " in ",
##         blurb$couX2, ").")
##     blurb.cou.string.template <- "<coef> in <indS>, within each country, supported by <couD><demand> of <couX> exports of <indX>, <year> (includes <coef> in <couX>)."
##     return(cat(paste0(blurb.cou.string, "\n",
##                       blurb.cou.string.template)))
## })

## output$label_cou <- renderPrint({
##     title <- data.title()

##     if (title$couX%in%region)
##     {
##         label.couX <- isolate(eval(parse(text = title$couX)))
##         string.label.couX <- paste0('couX: ', title$couX, '\n\t', toString(label.couX), '\n\n')
##     } else string.label.couX <- ""
##     if (title$couD%in%region)
##     {
##         label.couD <- isolate(eval(parse(text = title$couD)))
##         string.label.couD <- paste0('couD: ', title$couD, '\n\t', toString(label.couD))
##     } else string.label.couD <- ""

##     return(cat(paste0(string.label.couX, string.label.couD)))
## })

## data.xB <- reactive({
##     dat <- values[["ICIO5837APP"]]

##     ## isolate(
##     if (input$coef=="eB")
##     {
##         xB <- array(dat$DATA.ICIO5837EB[,,as.numeric(input$time)],
##                     dim = dim(dat$DATA.ICIO5837EB[,,as.numeric(input$time)])[1:2])
##     } else if (input$coef=="vB")
##     {
##         xB <- array(dat$DATA.ICIO5837VB[,,as.numeric(input$time)],
##                     dim = dim(dat$DATA.ICIO5837VB[,,as.numeric(input$time)])[1:2])
##     }
##     ## )

##     xB
## })

## data.demand <- reactive({
##     dat <- values[["ICIO5837APP"]]

##     ## isolate(
##     if (input$demand=="FD")
##     {
##         data.demand <- array(
##             dat$DATA.ICIO5837FDTTLWITHDISC[,,as.numeric(input$time)],
##             dim = dim(dat$DATA.ICIO5837FDTTLWITHDISC[,,as.numeric(input$time)])[1:2]
##             )
##     } else if (input$demand=="GFCF")
##     {
##         data.demand <- array(
##             dat$DATA.ICIO5837GFCF[,,as.numeric(input$time)],
##             dim = dim(dat$DATA.ICIO5837GFCF[,,as.numeric(input$time)])[1:2]
##             )
##     } else if (input$demand=="GRTR")
##     {
##         data.demand <- array(
##             dat$DATA.ICIO5837GRTR[,,as.numeric(input$time)],
##             dim = dim(dat$DATA.ICIO5837GRTR[,,as.numeric(input$time)])[1:2]
##             )
##     } else if (input$demand=="HHCP")
##     {
##         data.demand <- array(
##             dat$DATA.ICIO5837HHCP[,,as.numeric(input$time)],
##             dim = dim(dat$DATA.ICIO5837HHCP[,,as.numeric(input$time)])[1:2]
##             )
##     }
##     ## )

##     data.demand
## })

## data.conv1 <- reactive({

##     if (as.numeric(input$couX) <= nocou)
##     {
##         agg.couX <- as.numeric(input$couX)
##     } else if (as.numeric(input$couX) > nocou)
##     {
##         agg.couX <- namereg.agg[[as.numeric(input$couX)]]
##     }
##     ##
##     if (as.numeric(input$couD) <= nocou)
##     {
##         agg.couD <- as.numeric(input$couD)
##     } else if (as.numeric(input$couD) > nocou)
##     {
##         agg.couD <- namereg.agg[[as.numeric(input$couD)]]
##     }
##     ##
##     if (as.numeric(input$indX) <= noind)
##     {
##         agg.indX <- c(as.numeric(input$indX), as.numeric(input$indX))
##     } else if (as.numeric(input$indX) > noind)
##     {
##         agg.indX <- secagg[secagg$id==input$indX,3:4]
##         agg.indX <- c(agg.indX[[1]] : agg.indX[[2]])
##     }
##     ##
##     data.conv1 <- convCreate(dim = dim_conv,
##                              agg.row1 = agg.couD,
##                              agg.row2 = agg.indX,
##                              agg.col1 = agg.couX,
##                              horiz = TRUE,
##                              ## horiz = FALSE, # originally used for Final Demand / vertical layout
##                              dimnames = dimnames)

##     data.conv1
## })

## data.aaa <- reactive({
##     xB <- data.xB()
##     data.demand <- data.demand()
##     data.conv1 <- data.conv1()

##     data.couX.indX <- data.conv1 * data.demand
##     aaa <- xB %*% data.couX.indX
##     aaa <- apply(aaa, 1, sum)

##     aaa
## })

## output$image_conv1 <- renderPlot({
##     data.conv1 <- data.conv1()

##     x <- data.conv1
##     x <- x[, rev(seq_len(ncol(x)))]
##     xLabels <- rownames(x)
##     yLabels <- colnames(x)
##     mid <- (noind-1)/2
##     posxLabels <- seq(from = mid+1, to = noind*nocou-mid, by = noind)
##     ## posxLabels <- seq(from = 1, to = 2146, by = 37)
##     i <- image(1:length(xLabels), 1:length(yLabels), x,
##                col = c("white", "green"),
##                xlab = "Export Country + Demand or Final Expenditure Industry (couX + indX)",
##                ylab = "Demand Country (couD)",
##                axes = FALSE)
##     axis(BOTTOM<-1, at=posxLabels, labels=rev(yLabels), las = VERTICAL<-2, cex.axis=0.7)
##     axis(TOP<-3, at=posxLabels, labels=rev(yLabels), las = VERTICAL<-2, cex.axis=0.7)
##     axis(LEFT<-2, at=1:length(yLabels), labels=yLabels, las= HORIZONTAL<-1, cex.axis=0.6)
##     axis(RIGHT<-4, at=1:length(yLabels), labels=yLabels, las= HORIZONTAL<-1, cex.axis=0.6)

##     return(i)
## })

## data.by.ind <- reactive({
##     aaa <- data.aaa()
##     ## structure: 37 rows, 58 * 37 columns
##     ##            [1 0 0 0 0 0 : 0 0 0 0 0 0 : 1 0 0 0 0 0 : ... ]
##     ##            [0 1 0 0 0 0 : 0 0 0 0 0 0 : 0 1 0 0 0 0 : ... ]
##     ##            [0 0 1 0 0 0 : 0 0 0 0 0 0 : 0 0 1 0 0 0 : ... ]

##     conv.cou <- array(0, dim = c(noind, nocou * noind)) # 37 x 2146
##     for (i in c(1:noind))
##     {
##         if (as.numeric(input$couS) <= nocou)
##         {
##             conv.cou[i, (as.numeric(input$couS)-1)*noind + i] <- 1
##         } else if (as.numeric(input$couS) >= 59)
##         {
##             agg.ind <- secagg[secagg$id==input$indS,3:4]
##             agg.couS <- namereg.agg[[as.numeric(input$couS)]]
##             for (j in seq(along=agg.couS))
##             {
##                 conv.cou[i, (agg.couS[j]-1)*noind + i] <- 1
##             }
##         }
##     }
##     data.by.ind <- conv.cou %*% aaa
##     if (input$calcshare==TRUE) data.by.ind <- data.by.ind / sum(data.by.ind)

##     data.by.ind
## })

## data.by.cou <- reactive({
##     aaa <- data.aaa()
##     ## create converter from 2146 cou * ind to 58 cou
##     ## see examplestructure below

##     conv.ind <- array(0, dim = c(nocou, nocou * noind)) # 58 x 2146
##     for (j in c(1:nocou))
##     {
##         if (as.numeric(input$indS) <= noind)
##         {
##             conv.ind[j, (j-1)*noind + as.numeric(input$indS)] <- 1
##         } else if (as.numeric(input$indS) > noind)
##         {
##             agg.ind <- secagg[secagg$id==input$indS,3:4]
##             conv.ind[j, ((j-1)*noind + as.numeric(agg.ind[1])) : ((j-1)*noind + as.numeric(agg.ind[2]))] <- 1
##         }
##     }
##     ## structure: [0 0 1 1 1 0 : 0 0 0 0 0 0 : 0 0 0 0 0 0 : ... ]
##     ##            [0 0 0 0 0 0 : 0 0 1 1 1 0 : 0 0 0 0 0 0 : ... ]
##     ##            [0 0 0 0 0 0 : 0 0 0 0 0 0 : 0 0 1 1 1 0 : ... ]
##     data.by.cou <- conv.ind %*% aaa
##     if (input$calcshare==TRUE) data.by.cou <- data.by.cou / sum(data.by.cou)

##     data.by.cou
## })

## ## Tab: Table: Data (display underlying data in table)
## output$table_data_ind<- renderTable({
##     data.by.ind <- data.by.ind()
##     data <- data.by.ind
##     data.table <- cbind.data.frame(Industry = namesec,
##                                    Value = paste(round(data, input$rounddec)))
##     if (input$sortdata=="desc")
##     {
##         data.table <- data.table[order(-data),]
##     } else if (input$sortdata=="asc")
##     {
##         data.table <- data.table[order(data),]
##     }
##     data.sum <- cbind.data.frame(Industry = "Total", Value = sum(data))
##     data.table <- rbind(data.sum, data.table)
##     if (input$aggindX==TRUE)
##     {
##         data.ind18 <- data.by.ind
##         data.ind18.1 <- cbind.data.frame(Industry = as.character(agg.ind.icio[,"ind.icio18"]),
##                                          Value = data.ind18)
##         data.ind18.2 <- aggregate(data.ind18.1[,"Value"],
##                                   by = list(data.ind18.1$Industry),
##                                   FUN = "sum")
##         names(data.ind18.2) <- c("Industry", "Value")
##         data.ind18.2$Value <- round(data.ind18.2$Value, input$rounddec)
##         data.table <- rbind(data.ind18.2, data.table)
##     }

##     data.table
## })

## ## all industries by country
## output$plot_bar_ind <- renderPlot({
##     data.by.ind <- data.by.ind()
##     title.string <- data.title.string()

##     data.plot <- data.by.ind
##     names <- namesec
##     if (input$noindX==TRUE)
##     {
##         data.plot <- as.matrix(data.plot[-as.numeric(input$indX),])
##         names <- names[-as.numeric(input$indX)]
##     }
##     op <- par(oma=c(1,0,2,0)) # Room for the title and legend
##     barplot(data.plot,
##             beside = TRUE,
##             names = names, las = 2, cex.names = .8,
##             ## main = title.string,
##             col = EXCEL.COL[1,2])
##     ## legend values
##     data.sort <- cbind.data.frame(namesec, data.by.ind)
##     if (input$sortdata=="desc")
##     {
##         data.sort <- data.sort[order(-data.by.ind),]
##     } else if (input$sortdata=="asc")
##     {
##         data.sort <- data.sort[order(data.by.ind),]
##     }
##     data.sort$data.by.ind <- round(data.sort$data.by.ind, input$rounddec)
##     data.sort <- paste0(as.character(data.sort[1:input$topN,1]), ": ", data.sort[1:input$topN,2])
##     par(op) # Leave the last plot
##     mtext(title.string, line = 2, font = 2, cex = 1.2)
##     op <- par(usr=c(0,0.1,0,1.05), # Reset the coordinates
##               xpd=NA)         # Allow plotting outside the plot region
##     legend(0, 1.1, legend=data.sort, cex=0.8, box.col = NA, horiz = TRUE)

## })

## ## Tab: Table: Data (display underlying data in table)
## output$table_data_cou <- renderTable({
##     data.by.cou <- data.by.cou()

##     data <- data.by.cou
##     data.table <- cbind.data.frame(Industry = namereg,
##                                    Value = paste(round(data, input$rounddec)))
##     if (input$sortdata=="desc")
##     {
##         data.table <- data.table[order(-data),]
##     } else if (input$sortdata=="asc")
##     {
##         data.table <- data.table[order(data),]
##     }
##     data.sum <- cbind.data.frame(Industry = "Total", Value = sum(data))
##     data.table <- rbind(data.sum, data.table)
##     ## data <- c(sum(data), data)
##     ## data.table <- cbind.data.frame(Country = c("Total", namereg),
##     ##                                Value = paste(round(data, input$rounddec)))

##     data.table
## })

## ## all industries by country
## output$plot_bar_cou <- renderPlot({
##     data.by.cou <- data.by.cou()
##     title.string <- data.title.string()

##     data.plot <- data.by.cou
##     names <- namereg
##     if (input$nocouX==TRUE)
##     {
##         data.plot <- as.matrix(data.plot[-as.numeric(input$couX),])
##         names <- names[-as.numeric(input$couX)]
##     }
##     ##
##     op <- par(oma=c(1,0,2,0)) # Room for the title and legend
##     barplot(data.plot,
##             beside = TRUE,
##             names = names, las = 2, cex.names = .8,
##             ## main = title.string,
##             col = EXCEL.COL[1,2])
##     ## legend values
##     data.sort <- cbind.data.frame(namereg, data.by.cou)
##     if (input$sortdata=="desc")
##     {
##         data.sort <- data.sort[order(-data.by.cou),]
##     } else if (input$sortdata=="asc")
##     {
##         data.sort <- data.sort[order(data.by.cou),]
##     }
##     data.sort$data.by.cou <- round(data.sort$data.by.cou, input$rounddec)
##     data.sort <- paste0(as.character(data.sort[1:input$topN,1]), ": ", data.sort[1:input$topN,2])
##     par(op) # Leave the last plot
##     mtext(title.string, line = 2, font = 2, cex = 1.2)
##     op <- par(usr=c(0,0.11,0,1.05), # Reset the coordinates
##               xpd=NA)         # Allow plotting outside the plot region
##     legend(0, 1.1, legend=data.sort, cex=0.8, box.col = NA, horiz = TRUE)
##     ## barplot(data.plot,
##     ##         beside = TRUE,
##     ##         names = names, las = 2, cex.names = .8,
##     ##         main = title.string,
##     ##         col = EXCEL.COL[1,2])

## })

## output$rchart_map_cou <- renderChart2({
##     data.by.cou <- data.by.cou()

##     data.plot <- data.frame(cou = namereg,
##                             value = round(data.by.cou, 0))
##     data.plot <- data.plot[!data.plot$value==0,]
##     ## d <- choropleth(value ~ cou, data = data.plot[1:9,], map = "world", pal = "PuRd")
##     m1 <- ichoropleth(value ~ cou, data = data.plot, map = "world")
##     m1$set(height = "100%",
##            slider = TRUE)
##     m1

## })

## ## subset data to download selection
## data.out <- reactive({
##     if (input$datatabs%in%c(1,2,5,6))
##     {
##         ## if (input$datatabs%in%c(1,2))
##         ## {
##         ##     emp58 <- data.emp58()
##         ##     data.out <- emp58
##         ##     names.out <- "Total embodied employment"
##         ## } else
##         if (input$datatabs%in%c(5,6))
##         {
##             data.by.cou <- data.by.cou()
##             data.out <- data.by.cou
##             ## names.out <- "Embodied employment by source country"
##         }
##         data.out <- cbind.data.frame(Country = namereg, Value = paste0(round(data.out, input$rounddec)))
##     } else if (input$datatabs%in%c(3,4))
##     {
##         data.by.ind <- data.by.ind()
##         data.out <- data.by.ind
##         ## names.out <- "Embodied employment by source industry"
##         data.out <- cbind.data.frame(Industry = namesec, Value = paste0(round(data.out, input$rounddec)))
##     }
##     ## names.out <- paste(names.out, title.string(), sep = ",")
##     title.string <- data.title.string()
##     names(data.out)[2] <- title.string
##     data.out
## })

## output$downloadData <- downloadHandler(
##     filename = function() {
##         paste0(nameyear[as.numeric(input$time)],
##                ## '_', namereg[as.numeric(input$couEX)],
##                ## '_', namesec[as.numeric(input$indEX)],
##                '_', namereg[as.numeric(input$couVA)],
##                '.csv')
##     },
##     content = function(file) {
##         write.csv(data.out(), file, row.names = FALSE)
##     }
##     )
